# REGULAR EXPRESSIONS

METACHARACTERS
./[{()$^|?*+\



\d - Matches any decimal digit; this is equivalent to the class [0-9].

\D - Matches any non-digit character; this is equivalent to the class [^0-9].

\s - Matches any whitespace character; this is equivalent to the class [ \t\n\r\f\v].

\S - Matches any non-whitespace character; this is equivalent to the class [^ \t\n\r\f\v].

\w - Matches any alphanumeric character; this is equivalent to the class [a-zA-Z0-9_].

\W - Matches any non-alphanumeric character; this is equivalent to the class [^a-zA-Z0-9_].

--------------------------------------------------------------------------------------------------

Method/Attribute            Purpose
================            ========
match()                     Determine if the RE matches at the beginning of the string.

search()                    Scan through a string, looking for any location where this RE matches.

findall()                   Find all substrings where the RE matches, and returns them as a list.

finditer()                  Find all substrings where the RE matches, and returns them as an iterator.

Now you can query the match object for information about the matching string. Match object instances also have several methods and attributes; the most important ones are:

group()                     Return the string matched by the RE
start()                     Return the starting position of the match
end()                       Return the ending position of the match
span()                      Return a tuple containing the (start, end) positions of the match


----------------------------------------------------------------------------------------------

.   -   Any character except newline.
\d  -   Digit(0-9)
\D  -   Not a Digit(0-9)
\w  -   word character(a-z, A-Z, 0-9)
\W  -   Not a word character
\s  -   whitespace(space tab newline)
\S  -   Not a whitespace.
\b  -   Word boundary
\B  -   Not a Word boundary
^   -   Beginning of a string
$   -   End of a string.

----------------------------------------------------------------------------------------------
Quantifiers:
===========

*   -   0 or more
+   -   1 or more
?   -   0 or one
{3} -   Exact number
{3,4}   Range of numbers   

---------------------------------